ARM GAS  /tmp/cckrUKPr.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"usart.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
  22              		.align	2
  23              		.global	MX_USART2_UART_Init
  24              		.thumb
  25              		.thumb_func
  27              	MX_USART2_UART_Init:
  28              	.LFB124:
  29              		.file 1 "Src/usart.c"
   1:Src/usart.c   **** /**
   2:Src/usart.c   ****   ******************************************************************************
   3:Src/usart.c   ****   * File Name          : USART.c
   4:Src/usart.c   ****   * Description        : This file provides code for the configuration
   5:Src/usart.c   ****   *                      of the USART instances.
   6:Src/usart.c   ****   ******************************************************************************
   7:Src/usart.c   ****   ** This notice applies to any and all portions of this file
   8:Src/usart.c   ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/usart.c   ****   * USER CODE END. Other portions of this file, whether 
  10:Src/usart.c   ****   * inserted by the user or by software development tools
  11:Src/usart.c   ****   * are owned by their respective copyright owners.
  12:Src/usart.c   ****   *
  13:Src/usart.c   ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/usart.c   ****   *
  15:Src/usart.c   ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/usart.c   ****   * are permitted provided that the following conditions are met:
  17:Src/usart.c   ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/usart.c   ****   *      this list of conditions and the following disclaimer.
  19:Src/usart.c   ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/usart.c   ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/usart.c   ****   *      and/or other materials provided with the distribution.
  22:Src/usart.c   ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/usart.c   ****   *      may be used to endorse or promote products derived from this software
  24:Src/usart.c   ****   *      without specific prior written permission.
  25:Src/usart.c   ****   *
  26:Src/usart.c   ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/usart.c   ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/usart.c   ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/usart.c   ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
ARM GAS  /tmp/cckrUKPr.s 			page 2


  30:Src/usart.c   ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/usart.c   ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/usart.c   ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/usart.c   ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/usart.c   ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/usart.c   ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/usart.c   ****   *
  37:Src/usart.c   ****   ******************************************************************************
  38:Src/usart.c   ****   */
  39:Src/usart.c   **** 
  40:Src/usart.c   **** /* Includes ------------------------------------------------------------------*/
  41:Src/usart.c   **** #include "usart.h"
  42:Src/usart.c   **** 
  43:Src/usart.c   **** #include "gpio.h"
  44:Src/usart.c   **** 
  45:Src/usart.c   **** /* USER CODE BEGIN 0 */
  46:Src/usart.c   **** 
  47:Src/usart.c   **** /* USER CODE END 0 */
  48:Src/usart.c   **** 
  49:Src/usart.c   **** UART_HandleTypeDef huart2;
  50:Src/usart.c   **** 
  51:Src/usart.c   **** /* USART2 init function */
  52:Src/usart.c   **** 
  53:Src/usart.c   **** void MX_USART2_UART_Init(void)
  54:Src/usart.c   **** {
  30              		.loc 1 54 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34 0000 08B5     		push	{r3, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 3, -8
  38              		.cfi_offset 14, -4
  55:Src/usart.c   **** 
  56:Src/usart.c   ****   huart2.Instance = USART2;
  39              		.loc 1 56 0
  40 0002 0B48     		ldr	r0, .L4
  41 0004 0B4B     		ldr	r3, .L4+4
  42 0006 0360     		str	r3, [r0]
  57:Src/usart.c   ****   huart2.Init.BaudRate = 115200;
  43              		.loc 1 57 0
  44 0008 4FF4E133 		mov	r3, #115200
  45 000c 4360     		str	r3, [r0, #4]
  58:Src/usart.c   ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
  46              		.loc 1 58 0
  47 000e 0023     		movs	r3, #0
  48 0010 8360     		str	r3, [r0, #8]
  59:Src/usart.c   ****   huart2.Init.StopBits = UART_STOPBITS_1;
  49              		.loc 1 59 0
  50 0012 C360     		str	r3, [r0, #12]
  60:Src/usart.c   ****   huart2.Init.Parity = UART_PARITY_NONE;
  51              		.loc 1 60 0
  52 0014 0361     		str	r3, [r0, #16]
  61:Src/usart.c   ****   huart2.Init.Mode = UART_MODE_TX_RX;
  53              		.loc 1 61 0
  54 0016 0C22     		movs	r2, #12
ARM GAS  /tmp/cckrUKPr.s 			page 3


  55 0018 4261     		str	r2, [r0, #20]
  62:Src/usart.c   ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  56              		.loc 1 62 0
  57 001a 8361     		str	r3, [r0, #24]
  63:Src/usart.c   ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
  58              		.loc 1 63 0
  59 001c C361     		str	r3, [r0, #28]
  64:Src/usart.c   ****   if (HAL_UART_Init(&huart2) != HAL_OK)
  60              		.loc 1 64 0
  61 001e FFF7FEFF 		bl	HAL_UART_Init
  62              	.LVL0:
  63 0022 18B1     		cbz	r0, .L1
  65:Src/usart.c   ****   {
  66:Src/usart.c   ****     _Error_Handler(__FILE__, __LINE__);
  64              		.loc 1 66 0
  65 0024 4221     		movs	r1, #66
  66 0026 0448     		ldr	r0, .L4+8
  67 0028 FFF7FEFF 		bl	_Error_Handler
  68              	.LVL1:
  69              	.L1:
  70 002c 08BD     		pop	{r3, pc}
  71              	.L5:
  72 002e 00BF     		.align	2
  73              	.L4:
  74 0030 00000000 		.word	huart2
  75 0034 00440040 		.word	1073759232
  76 0038 00000000 		.word	.LC0
  77              		.cfi_endproc
  78              	.LFE124:
  80              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  81              		.align	2
  82              		.global	HAL_UART_MspInit
  83              		.thumb
  84              		.thumb_func
  86              	HAL_UART_MspInit:
  87              	.LFB125:
  67:Src/usart.c   ****   }
  68:Src/usart.c   **** 
  69:Src/usart.c   **** }
  70:Src/usart.c   **** 
  71:Src/usart.c   **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  72:Src/usart.c   **** {
  88              		.loc 1 72 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 24
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              	.LVL2:
  73:Src/usart.c   **** 
  74:Src/usart.c   ****   GPIO_InitTypeDef GPIO_InitStruct;
  75:Src/usart.c   ****   if(uartHandle->Instance==USART2)
  93              		.loc 1 75 0
  94 0000 0268     		ldr	r2, [r0]
  95 0002 104B     		ldr	r3, .L10
  96 0004 9A42     		cmp	r2, r3
  97 0006 1CD1     		bne	.L9
  72:Src/usart.c   **** 
  98              		.loc 1 72 0
ARM GAS  /tmp/cckrUKPr.s 			page 4


  99 0008 00B5     		push	{lr}
 100              	.LCFI1:
 101              		.cfi_def_cfa_offset 4
 102              		.cfi_offset 14, -4
 103 000a 87B0     		sub	sp, sp, #28
 104              	.LCFI2:
 105              		.cfi_def_cfa_offset 32
 106              	.LBB2:
  76:Src/usart.c   ****   {
  77:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspInit 0 */
  78:Src/usart.c   **** 
  79:Src/usart.c   ****   /* USER CODE END USART2_MspInit 0 */
  80:Src/usart.c   ****     /* USART2 clock enable */
  81:Src/usart.c   ****     __HAL_RCC_USART2_CLK_ENABLE();
 107              		.loc 1 81 0
 108 000c 0023     		movs	r3, #0
 109 000e 0093     		str	r3, [sp]
 110 0010 0D4A     		ldr	r2, .L10+4
 111 0012 116C     		ldr	r1, [r2, #64]
 112 0014 41F40031 		orr	r1, r1, #131072
 113 0018 1164     		str	r1, [r2, #64]
 114 001a 126C     		ldr	r2, [r2, #64]
 115 001c 02F40032 		and	r2, r2, #131072
 116 0020 0092     		str	r2, [sp]
 117 0022 009A     		ldr	r2, [sp]
 118              	.LBE2:
  82:Src/usart.c   ****   
  83:Src/usart.c   ****     /**USART2 GPIO Configuration    
  84:Src/usart.c   ****     PA2     ------> USART2_TX
  85:Src/usart.c   ****     PA3     ------> USART2_RX 
  86:Src/usart.c   ****     */
  87:Src/usart.c   ****     GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
 119              		.loc 1 87 0
 120 0024 0C22     		movs	r2, #12
 121 0026 0192     		str	r2, [sp, #4]
  88:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 122              		.loc 1 88 0
 123 0028 0222     		movs	r2, #2
 124 002a 0292     		str	r2, [sp, #8]
  89:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 125              		.loc 1 89 0
 126 002c 0393     		str	r3, [sp, #12]
  90:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 127              		.loc 1 90 0
 128 002e 0493     		str	r3, [sp, #16]
  91:Src/usart.c   ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 129              		.loc 1 91 0
 130 0030 0723     		movs	r3, #7
 131 0032 0593     		str	r3, [sp, #20]
  92:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 132              		.loc 1 92 0
 133 0034 01A9     		add	r1, sp, #4
 134 0036 0548     		ldr	r0, .L10+8
 135              	.LVL3:
 136 0038 FFF7FEFF 		bl	HAL_GPIO_Init
 137              	.LVL4:
  93:Src/usart.c   **** 
ARM GAS  /tmp/cckrUKPr.s 			page 5


  94:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspInit 1 */
  95:Src/usart.c   **** 
  96:Src/usart.c   ****   /* USER CODE END USART2_MspInit 1 */
  97:Src/usart.c   ****   }
  98:Src/usart.c   **** }
 138              		.loc 1 98 0
 139 003c 07B0     		add	sp, sp, #28
 140              	.LCFI3:
 141              		.cfi_def_cfa_offset 4
 142              		@ sp needed
 143 003e 5DF804FB 		ldr	pc, [sp], #4
 144              	.LVL5:
 145              	.L9:
 146              	.LCFI4:
 147              		.cfi_def_cfa_offset 0
 148              		.cfi_restore 14
 149 0042 7047     		bx	lr
 150              	.L11:
 151              		.align	2
 152              	.L10:
 153 0044 00440040 		.word	1073759232
 154 0048 00380240 		.word	1073887232
 155 004c 00000240 		.word	1073872896
 156              		.cfi_endproc
 157              	.LFE125:
 159              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 160              		.align	2
 161              		.global	HAL_UART_MspDeInit
 162              		.thumb
 163              		.thumb_func
 165              	HAL_UART_MspDeInit:
 166              	.LFB126:
  99:Src/usart.c   **** 
 100:Src/usart.c   **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
 101:Src/usart.c   **** {
 167              		.loc 1 101 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171              	.LVL6:
 172 0000 08B5     		push	{r3, lr}
 173              	.LCFI5:
 174              		.cfi_def_cfa_offset 8
 175              		.cfi_offset 3, -8
 176              		.cfi_offset 14, -4
 102:Src/usart.c   **** 
 103:Src/usart.c   ****   if(uartHandle->Instance==USART2)
 177              		.loc 1 103 0
 178 0002 0268     		ldr	r2, [r0]
 179 0004 064B     		ldr	r3, .L15
 180 0006 9A42     		cmp	r2, r3
 181 0008 08D1     		bne	.L12
 104:Src/usart.c   ****   {
 105:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspDeInit 0 */
 106:Src/usart.c   **** 
 107:Src/usart.c   ****   /* USER CODE END USART2_MspDeInit 0 */
 108:Src/usart.c   ****     /* Peripheral clock disable */
ARM GAS  /tmp/cckrUKPr.s 			page 6


 109:Src/usart.c   ****     __HAL_RCC_USART2_CLK_DISABLE();
 182              		.loc 1 109 0
 183 000a 064A     		ldr	r2, .L15+4
 184 000c 136C     		ldr	r3, [r2, #64]
 185 000e 23F40033 		bic	r3, r3, #131072
 186 0012 1364     		str	r3, [r2, #64]
 110:Src/usart.c   ****   
 111:Src/usart.c   ****     /**USART2 GPIO Configuration    
 112:Src/usart.c   ****     PA2     ------> USART2_TX
 113:Src/usart.c   ****     PA3     ------> USART2_RX 
 114:Src/usart.c   ****     */
 115:Src/usart.c   ****     HAL_GPIO_DeInit(GPIOA, USART_TX_Pin|USART_RX_Pin);
 187              		.loc 1 115 0
 188 0014 0C21     		movs	r1, #12
 189 0016 0448     		ldr	r0, .L15+8
 190              	.LVL7:
 191 0018 FFF7FEFF 		bl	HAL_GPIO_DeInit
 192              	.LVL8:
 193              	.L12:
 194 001c 08BD     		pop	{r3, pc}
 195              	.L16:
 196 001e 00BF     		.align	2
 197              	.L15:
 198 0020 00440040 		.word	1073759232
 199 0024 00380240 		.word	1073887232
 200 0028 00000240 		.word	1073872896
 201              		.cfi_endproc
 202              	.LFE126:
 204              		.comm	huart2,64,4
 205              		.section	.rodata.str1.4,"aMS",%progbits,1
 206              		.align	2
 207              	.LC0:
 208 0000 5372632F 		.ascii	"Src/usart.c\000"
 208      75736172 
 208      742E6300 
 209              		.text
 210              	.Letext0:
 211              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 212              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 213              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 214              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 215              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 216              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 217              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 218              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
 219              		.file 10 "Inc/usart.h"
ARM GAS  /tmp/cckrUKPr.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 usart.c
     /tmp/cckrUKPr.s:22     .text.MX_USART2_UART_Init:00000000 $t
     /tmp/cckrUKPr.s:27     .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
     /tmp/cckrUKPr.s:74     .text.MX_USART2_UART_Init:00000030 $d
                            *COM*:00000040 huart2
     /tmp/cckrUKPr.s:81     .text.HAL_UART_MspInit:00000000 $t
     /tmp/cckrUKPr.s:86     .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
     /tmp/cckrUKPr.s:153    .text.HAL_UART_MspInit:00000044 $d
     /tmp/cckrUKPr.s:160    .text.HAL_UART_MspDeInit:00000000 $t
     /tmp/cckrUKPr.s:165    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
     /tmp/cckrUKPr.s:198    .text.HAL_UART_MspDeInit:00000020 $d
     /tmp/cckrUKPr.s:206    .rodata.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_UART_Init
_Error_Handler
HAL_GPIO_Init
HAL_GPIO_DeInit
