ARM GAS  /tmp/ccXyJqFc.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"lcd.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.LCDInterfaceInitialisation,"ax",%progbits
  22              		.align	2
  23              		.global	LCDInterfaceInitialisation
  24              		.thumb
  25              		.thumb_func
  27              	LCDInterfaceInitialisation:
  28              	.LFB124:
  29              		.file 1 "Src/lcd.c"
   1:Src/lcd.c     **** #include "lcd.h"
   2:Src/lcd.c     **** 
   3:Src/lcd.c     **** 
   4:Src/lcd.c     **** void LCDInterfaceInitialisation(LCDInterface* interface){
  30              		.loc 1 4 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LVL0:
  36 0000 F0B4     		push	{r4, r5, r6, r7}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 16
  39              		.cfi_offset 4, -16
  40              		.cfi_offset 5, -12
  41              		.cfi_offset 6, -8
  42              		.cfi_offset 7, -4
   5:Src/lcd.c     ****     (interface->pinout[0]).port = LCD_D0_GPIO_Port;
  43              		.loc 1 5 0
  44 0002 154A     		ldr	r2, .L3
  45 0004 0260     		str	r2, [r0]
   6:Src/lcd.c     ****     (interface->pinout[0]).pin = LCD_D0_Pin;
  46              		.loc 1 6 0
  47 0006 1023     		movs	r3, #16
  48 0008 8380     		strh	r3, [r0, #4]	@ movhi
   7:Src/lcd.c     ****     (interface->pinout[1]).port = LCD_D1_GPIO_Port;
  49              		.loc 1 7 0
  50 000a 8260     		str	r2, [r0, #8]
   8:Src/lcd.c     ****     (interface->pinout[1]).pin = LCD_D1_Pin;
ARM GAS  /tmp/ccXyJqFc.s 			page 2


  51              		.loc 1 8 0
  52 000c 4FF48061 		mov	r1, #1024
  53 0010 8181     		strh	r1, [r0, #12]	@ movhi
   9:Src/lcd.c     ****     (interface->pinout[2]).port = LCD_D2_GPIO_Port;
  54              		.loc 1 9 0
  55 0012 124B     		ldr	r3, .L3+4
  56 0014 0361     		str	r3, [r0, #16]
  10:Src/lcd.c     ****     (interface->pinout[2]).pin = LCD_D2_Pin;
  57              		.loc 1 10 0
  58 0016 4FF48074 		mov	r4, #256
  59 001a 8482     		strh	r4, [r0, #20]	@ movhi
  11:Src/lcd.c     ****     (interface->pinout[3]).port = LCD_D3_GPIO_Port;
  60              		.loc 1 11 0
  61 001c 8361     		str	r3, [r0, #24]
  12:Src/lcd.c     ****     (interface->pinout[3]).pin = LCD_D3_Pin;
  62              		.loc 1 12 0
  63 001e 4FF40074 		mov	r4, #512
  64 0022 8483     		strh	r4, [r0, #28]	@ movhi
  13:Src/lcd.c     ****     (interface->pinout[4]).port = LCD_D4_GPIO_Port;
  65              		.loc 1 13 0
  66 0024 0E4D     		ldr	r5, .L3+8
  67 0026 0562     		str	r5, [r0, #32]
  14:Src/lcd.c     ****     (interface->pinout[4]).pin = LCD_D4_Pin;
  68              		.loc 1 14 0
  69 0028 8027     		movs	r7, #128
  70 002a 8784     		strh	r7, [r0, #36]	@ movhi
  15:Src/lcd.c     ****     (interface->pinout[5]).port = LCD_D5_GPIO_Port;
  71              		.loc 1 15 0
  72 002c 8262     		str	r2, [r0, #40]
  16:Src/lcd.c     ****     (interface->pinout[5]).pin = LCD_D5_Pin;
  73              		.loc 1 16 0
  74 002e 4026     		movs	r6, #64
  75 0030 8685     		strh	r6, [r0, #44]	@ movhi
  17:Src/lcd.c     ****     (interface->pinout[6]).port = LCD_D6_GPIO_Port;
  76              		.loc 1 17 0
  77 0032 0363     		str	r3, [r0, #48]
  18:Src/lcd.c     ****     (interface->pinout[6]).pin = LCD_D6_Pin;
  78              		.loc 1 18 0
  79 0034 8786     		strh	r7, [r0, #52]	@ movhi
  19:Src/lcd.c     ****     (interface->pinout[7]).port = LCD_D7_GPIO_Port;
  80              		.loc 1 19 0
  81 0036 8363     		str	r3, [r0, #56]
  20:Src/lcd.c     ****     (interface->pinout[7]).pin = LCD_D7_Pin;
  82              		.loc 1 20 0
  83 0038 8687     		strh	r6, [r0, #60]	@ movhi
  21:Src/lcd.c     ****     (interface->pinout[8]).port = LCD_RW_GPIO_Port;
  84              		.loc 1 21 0
  85 003a 0564     		str	r5, [r0, #64]
  22:Src/lcd.c     ****     (interface->pinout[8]).pin = LCD_RW_Pin;
  86              		.loc 1 22 0
  87 003c A0F84440 		strh	r4, [r0, #68]	@ movhi
  23:Src/lcd.c     ****     (interface->pinout[9]).port = LCD_RS_GPIO_Port;
  88              		.loc 1 23 0
  89 0040 8364     		str	r3, [r0, #72]
  24:Src/lcd.c     ****     (interface->pinout[9]).pin = LCD_RS_Pin;
  90              		.loc 1 24 0
  91 0042 A0F84C10 		strh	r1, [r0, #76]	@ movhi
ARM GAS  /tmp/ccXyJqFc.s 			page 3


  25:Src/lcd.c     ****     (interface->pinout[10]).port = LCD_E_GPIO_Port;
  92              		.loc 1 25 0
  93 0046 0265     		str	r2, [r0, #80]
  26:Src/lcd.c     ****     (interface->pinout[10]).pin = LCD_E_Pin;
  94              		.loc 1 26 0
  95 0048 2023     		movs	r3, #32
  96 004a A0F85430 		strh	r3, [r0, #84]	@ movhi
  27:Src/lcd.c     ****     interface->data = 0;
  97              		.loc 1 27 0
  98 004e 0023     		movs	r3, #0
  99 0050 80F85A30 		strb	r3, [r0, #90]
  28:Src/lcd.c     **** }
 100              		.loc 1 28 0
 101 0054 F0BC     		pop	{r4, r5, r6, r7}
 102              	.LCFI1:
 103              		.cfi_restore 7
 104              		.cfi_restore 6
 105              		.cfi_restore 5
 106              		.cfi_restore 4
 107              		.cfi_def_cfa_offset 0
 108 0056 7047     		bx	lr
 109              	.L4:
 110              		.align	2
 111              	.L3:
 112 0058 00040240 		.word	1073873920
 113 005c 00000240 		.word	1073872896
 114 0060 00080240 		.word	1073874944
 115              		.cfi_endproc
 116              	.LFE124:
 118              		.section	.text.PinChangeMode,"ax",%progbits
 119              		.align	2
 120              		.global	PinChangeMode
 121              		.thumb
 122              		.thumb_func
 124              	PinChangeMode:
 125              	.LFB136:
  29:Src/lcd.c     **** 
  30:Src/lcd.c     **** void LCDSendChar(LCDInterface* interface, char c){
  31:Src/lcd.c     ****     interface->data = c;
  32:Src/lcd.c     ****     interface->instruction = WRITE;
  33:Src/lcd.c     ****     LCDSendInstruction(interface);
  34:Src/lcd.c     **** }
  35:Src/lcd.c     **** 
  36:Src/lcd.c     **** void LCDSendText(LCDInterface* interface, char* data){
  37:Src/lcd.c     ****     char *c = data;
  38:Src/lcd.c     ****     while(*c != '\0'){
  39:Src/lcd.c     ****         LCDSendChar(interface, *c);
  40:Src/lcd.c     ****         c++;
  41:Src/lcd.c     ****     }
  42:Src/lcd.c     **** }
  43:Src/lcd.c     **** 
  44:Src/lcd.c     **** void LCDSendInstruction(LCDInterface* interface){
  45:Src/lcd.c     ****     int i;
  46:Src/lcd.c     ****     WaitLCD(interface);
  47:Src/lcd.c     ****     HAL_GPIO_WritePin((interface->pinout[10]).port,(interface->pinout[10]).pin,1);
  48:Src/lcd.c     ****     for (i=0; i<10; i++){
  49:Src/lcd.c     ****         if (1<<i & (interface->instruction | interface->data)){
ARM GAS  /tmp/ccXyJqFc.s 			page 4


  50:Src/lcd.c     ****             HAL_GPIO_WritePin((interface->pinout[i]).port,(interface->pinout[i]).pin,1);
  51:Src/lcd.c     ****         }
  52:Src/lcd.c     ****         else{
  53:Src/lcd.c     ****             HAL_GPIO_WritePin((interface->pinout[i]).port,(interface->pinout[i]).pin,0);
  54:Src/lcd.c     ****         }
  55:Src/lcd.c     ****     }
  56:Src/lcd.c     ****     HAL_GPIO_WritePin((interface->pinout[10]).port,(interface->pinout[10]).pin,0);
  57:Src/lcd.c     ****     interface->data = 0;
  58:Src/lcd.c     **** }
  59:Src/lcd.c     **** 
  60:Src/lcd.c     **** void InstructionFunctionSet(LCDInterface* interface, char config[10]){
  61:Src/lcd.c     ****     interface->instruction = FUNCTIONSET;
  62:Src/lcd.c     ****     interface->data = (char)config[5]<<4|config[6]<<3|config[7]<<2;
  63:Src/lcd.c     ****     LCDSendInstruction(interface);
  64:Src/lcd.c     **** }
  65:Src/lcd.c     **** 
  66:Src/lcd.c     **** void InstructionFunctionSetStart(LCDInterface* interface, char config[10]){
  67:Src/lcd.c     ****     int i;
  68:Src/lcd.c     ****     InstructionFunctionSet(interface, config);
  69:Src/lcd.c     ****     HAL_Delay(5);
  70:Src/lcd.c     **** 
  71:Src/lcd.c     ****     for(i=0; i<3; i++){
  72:Src/lcd.c     ****         InstructionFunctionSet(interface, config);
  73:Src/lcd.c     ****         HAL_Delay(1);
  74:Src/lcd.c     ****     }
  75:Src/lcd.c     **** }
  76:Src/lcd.c     **** 
  77:Src/lcd.c     **** void InstructionDisplay(LCDInterface* interface, char config[10]){
  78:Src/lcd.c     ****     interface->instruction = DISPLAY;
  79:Src/lcd.c     ****     interface->data = (char)config[2]<<2|config[3]<<1|config[4]<<0;
  80:Src/lcd.c     ****     LCDSendInstruction(interface);
  81:Src/lcd.c     **** }
  82:Src/lcd.c     **** 
  83:Src/lcd.c     **** void InstructionEntryModeSet(LCDInterface* interface, char config[10]){
  84:Src/lcd.c     ****     interface->instruction = ENTRYMODESET;
  85:Src/lcd.c     ****     interface->data = (char)config[1]<<1|config[0]<<0;
  86:Src/lcd.c     ****     LCDSendInstruction(interface);
  87:Src/lcd.c     **** }
  88:Src/lcd.c     **** 
  89:Src/lcd.c     **** void InstructionClearDisplay(LCDInterface* interface){
  90:Src/lcd.c     ****     interface->instruction = CLEARDISPLAY;
  91:Src/lcd.c     ****     interface->data = 0;
  92:Src/lcd.c     ****     LCDSendInstruction(interface);
  93:Src/lcd.c     **** }
  94:Src/lcd.c     **** 
  95:Src/lcd.c     **** void InstructionReturnHome(LCDInterface* interface){
  96:Src/lcd.c     ****     interface->instruction = RETURNHOME;
  97:Src/lcd.c     ****     LCDSendInstruction(interface);
  98:Src/lcd.c     **** }
  99:Src/lcd.c     **** 
 100:Src/lcd.c     **** void LCDInit(LCDInterface* interface, char config[10]){
 101:Src/lcd.c     ****     LCDInterfaceInitialisation(interface);
 102:Src/lcd.c     ****     HAL_Delay(20);
 103:Src/lcd.c     ****     InstructionFunctionSetStart(interface, config);
 104:Src/lcd.c     ****     HAL_Delay(1);
 105:Src/lcd.c     ****     InstructionDisplay(interface, config);
 106:Src/lcd.c     ****     HAL_Delay(1);
ARM GAS  /tmp/ccXyJqFc.s 			page 5


 107:Src/lcd.c     ****     InstructionClearDisplay(interface);
 108:Src/lcd.c     ****     HAL_Delay(1);
 109:Src/lcd.c     ****     InstructionReturnHome(interface);
 110:Src/lcd.c     **** }
 111:Src/lcd.c     **** 
 112:Src/lcd.c     **** void InstructionCurseurPosition(LCDInterface* interface, char ddram){
 113:Src/lcd.c     ****     interface->instruction = SETDDRAM;
 114:Src/lcd.c     ****     interface->data = ddram;
 115:Src/lcd.c     ****     LCDSendInstruction(interface);
 116:Src/lcd.c     **** }
 117:Src/lcd.c     **** 
 118:Src/lcd.c     **** void PinChangeMode(GPIO_TypeDef* port, uint16_t pin, char direction){
 126              		.loc 1 118 0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 24
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              	.LVL1:
 131 0000 30B5     		push	{r4, r5, lr}
 132              	.LCFI2:
 133              		.cfi_def_cfa_offset 12
 134              		.cfi_offset 4, -12
 135              		.cfi_offset 5, -8
 136              		.cfi_offset 14, -4
 137 0002 87B0     		sub	sp, sp, #28
 138              	.LCFI3:
 139              		.cfi_def_cfa_offset 40
 140 0004 0546     		mov	r5, r0
 119:Src/lcd.c     ****     GPIO_InitTypeDef GPIO_InitStruct;
 120:Src/lcd.c     ****     if(direction){
 141              		.loc 1 120 0
 142 0006 12B1     		cbz	r2, .L6
 121:Src/lcd.c     ****         GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 143              		.loc 1 121 0
 144 0008 0123     		movs	r3, #1
 145 000a 0293     		str	r3, [sp, #8]
 146 000c 01E0     		b	.L7
 147              	.L6:
 122:Src/lcd.c     ****     }
 123:Src/lcd.c     ****     else{
 124:Src/lcd.c     ****         GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 148              		.loc 1 124 0
 149 000e 0023     		movs	r3, #0
 150 0010 0293     		str	r3, [sp, #8]
 151              	.L7:
 125:Src/lcd.c     ****     }
 126:Src/lcd.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 152              		.loc 1 126 0
 153 0012 0023     		movs	r3, #0
 154 0014 0393     		str	r3, [sp, #12]
 127:Src/lcd.c     ****     GPIO_InitStruct.Pin = pin;
 155              		.loc 1 127 0
 156 0016 06AC     		add	r4, sp, #24
 157 0018 44F8141D 		str	r1, [r4, #-20]!
 128:Src/lcd.c     ****     HAL_GPIO_DeInit(port, pin);
 158              		.loc 1 128 0
 159 001c 2846     		mov	r0, r5
 160              	.LVL2:
ARM GAS  /tmp/ccXyJqFc.s 			page 6


 161 001e FFF7FEFF 		bl	HAL_GPIO_DeInit
 162              	.LVL3:
 129:Src/lcd.c     ****     HAL_GPIO_Init(port, &GPIO_InitStruct);
 163              		.loc 1 129 0
 164 0022 2146     		mov	r1, r4
 165 0024 2846     		mov	r0, r5
 166 0026 FFF7FEFF 		bl	HAL_GPIO_Init
 167              	.LVL4:
 130:Src/lcd.c     **** }
 168              		.loc 1 130 0
 169 002a 07B0     		add	sp, sp, #28
 170              	.LCFI4:
 171              		.cfi_def_cfa_offset 12
 172              		@ sp needed
 173 002c 30BD     		pop	{r4, r5, pc}
 174              		.cfi_endproc
 175              	.LFE136:
 177 002e 00BF     		.section	.text.WaitLCD,"ax",%progbits
 178              		.align	2
 179              		.global	WaitLCD
 180              		.thumb
 181              		.thumb_func
 183              	WaitLCD:
 184              	.LFB137:
 131:Src/lcd.c     **** 
 132:Src/lcd.c     **** 
 133:Src/lcd.c     **** void WaitLCD(LCDInterface* interface){    
 185              		.loc 1 133 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              	.LVL5:
 190 0000 10B5     		push	{r4, lr}
 191              	.LCFI5:
 192              		.cfi_def_cfa_offset 8
 193              		.cfi_offset 4, -8
 194              		.cfi_offset 14, -4
 195 0002 0446     		mov	r4, r0
 134:Src/lcd.c     ****     HAL_GPIO_WritePin(interface->pinout[8].port,interface->pinout[8].pin,1);
 196              		.loc 1 134 0
 197 0004 0122     		movs	r2, #1
 198 0006 B0F84410 		ldrh	r1, [r0, #68]
 199 000a 006C     		ldr	r0, [r0, #64]
 200              	.LVL6:
 201 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 202              	.LVL7:
 135:Src/lcd.c     ****     HAL_GPIO_WritePin(interface->pinout[9].port,interface->pinout[9].pin,0);
 203              		.loc 1 135 0
 204 0010 0022     		movs	r2, #0
 205 0012 B4F84C10 		ldrh	r1, [r4, #76]
 206 0016 A06C     		ldr	r0, [r4, #72]
 207 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
 208              	.LVL8:
 136:Src/lcd.c     ****     
 137:Src/lcd.c     ****     PinChangeMode(LCD_D7_GPIO_Port, LCD_D7_Pin, 0);
 209              		.loc 1 137 0
 210 001c 0022     		movs	r2, #0
ARM GAS  /tmp/ccXyJqFc.s 			page 7


 211 001e 4021     		movs	r1, #64
 212 0020 0D48     		ldr	r0, .L12
 213 0022 FFF7FEFF 		bl	PinChangeMode
 214              	.LVL9:
 138:Src/lcd.c     ****     HAL_GPIO_WritePin(interface->pinout[10].port,interface->pinout[10].pin,1);
 215              		.loc 1 138 0
 216 0026 0122     		movs	r2, #1
 217 0028 B4F85410 		ldrh	r1, [r4, #84]
 218 002c 206D     		ldr	r0, [r4, #80]
 219 002e FFF7FEFF 		bl	HAL_GPIO_WritePin
 220              	.LVL10:
 221              	.L10:
 139:Src/lcd.c     ****     while(HAL_GPIO_ReadPin(interface->pinout[7].port,interface->pinout[7].pin)){
 222              		.loc 1 139 0 discriminator 1
 223 0032 A18F     		ldrh	r1, [r4, #60]
 224 0034 A06B     		ldr	r0, [r4, #56]
 225 0036 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 226              	.LVL11:
 227 003a 0028     		cmp	r0, #0
 228 003c F9D1     		bne	.L10
 140:Src/lcd.c     ****     }
 141:Src/lcd.c     ****     HAL_GPIO_WritePin(interface->pinout[10].port,interface->pinout[10].pin,0);
 229              		.loc 1 141 0
 230 003e 0022     		movs	r2, #0
 231 0040 B4F85410 		ldrh	r1, [r4, #84]
 232 0044 206D     		ldr	r0, [r4, #80]
 233 0046 FFF7FEFF 		bl	HAL_GPIO_WritePin
 234              	.LVL12:
 142:Src/lcd.c     **** 
 143:Src/lcd.c     ****     PinChangeMode(LCD_D7_GPIO_Port, LCD_D7_Pin, 1);
 235              		.loc 1 143 0
 236 004a 0122     		movs	r2, #1
 237 004c 4021     		movs	r1, #64
 238 004e 0248     		ldr	r0, .L12
 239 0050 FFF7FEFF 		bl	PinChangeMode
 240              	.LVL13:
 241 0054 10BD     		pop	{r4, pc}
 242              	.LVL14:
 243              	.L13:
 244 0056 00BF     		.align	2
 245              	.L12:
 246 0058 00000240 		.word	1073872896
 247              		.cfi_endproc
 248              	.LFE137:
 250              		.section	.text.LCDSendInstruction,"ax",%progbits
 251              		.align	2
 252              		.global	LCDSendInstruction
 253              		.thumb
 254              		.thumb_func
 256              	LCDSendInstruction:
 257              	.LFB127:
  44:Src/lcd.c     ****     int i;
 258              		.loc 1 44 0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
 262              	.LVL15:
ARM GAS  /tmp/ccXyJqFc.s 			page 8


 263 0000 38B5     		push	{r3, r4, r5, lr}
 264              	.LCFI6:
 265              		.cfi_def_cfa_offset 16
 266              		.cfi_offset 3, -16
 267              		.cfi_offset 4, -12
 268              		.cfi_offset 5, -8
 269              		.cfi_offset 14, -4
 270 0002 0546     		mov	r5, r0
  46:Src/lcd.c     ****     HAL_GPIO_WritePin((interface->pinout[10]).port,(interface->pinout[10]).pin,1);
 271              		.loc 1 46 0
 272 0004 FFF7FEFF 		bl	WaitLCD
 273              	.LVL16:
  47:Src/lcd.c     ****     for (i=0; i<10; i++){
 274              		.loc 1 47 0
 275 0008 0122     		movs	r2, #1
 276 000a B5F85410 		ldrh	r1, [r5, #84]
 277 000e 286D     		ldr	r0, [r5, #80]
 278 0010 FFF7FEFF 		bl	HAL_GPIO_WritePin
 279              	.LVL17:
  48:Src/lcd.c     ****         if (1<<i & (interface->instruction | interface->data)){
 280              		.loc 1 48 0
 281 0014 0024     		movs	r4, #0
 282 0016 1AE0     		b	.L15
 283              	.LVL18:
 284              	.L18:
  49:Src/lcd.c     ****             HAL_GPIO_WritePin((interface->pinout[i]).port,(interface->pinout[i]).pin,1);
 285              		.loc 1 49 0
 286 0018 B5F85820 		ldrh	r2, [r5, #88]
 287 001c 95F85A30 		ldrb	r3, [r5, #90]	@ zero_extendqisi2
 288 0020 1343     		orrs	r3, r3, r2
 289 0022 2341     		asrs	r3, r3, r4
 290 0024 13F0010F 		tst	r3, #1
 291 0028 08D0     		beq	.L16
  50:Src/lcd.c     ****         }
 292              		.loc 1 50 0
 293 002a 05EBC403 		add	r3, r5, r4, lsl #3
 294 002e 0122     		movs	r2, #1
 295 0030 9988     		ldrh	r1, [r3, #4]
 296 0032 55F83400 		ldr	r0, [r5, r4, lsl #3]
 297 0036 FFF7FEFF 		bl	HAL_GPIO_WritePin
 298              	.LVL19:
 299 003a 07E0     		b	.L17
 300              	.L16:
  53:Src/lcd.c     ****         }
 301              		.loc 1 53 0
 302 003c 05EBC403 		add	r3, r5, r4, lsl #3
 303 0040 0022     		movs	r2, #0
 304 0042 9988     		ldrh	r1, [r3, #4]
 305 0044 55F83400 		ldr	r0, [r5, r4, lsl #3]
 306 0048 FFF7FEFF 		bl	HAL_GPIO_WritePin
 307              	.LVL20:
 308              	.L17:
  48:Src/lcd.c     ****         if (1<<i & (interface->instruction | interface->data)){
 309              		.loc 1 48 0 discriminator 2
 310 004c 0134     		adds	r4, r4, #1
 311              	.LVL21:
 312              	.L15:
ARM GAS  /tmp/ccXyJqFc.s 			page 9


  48:Src/lcd.c     ****         if (1<<i & (interface->instruction | interface->data)){
 313              		.loc 1 48 0 is_stmt 0 discriminator 1
 314 004e 092C     		cmp	r4, #9
 315 0050 E2DD     		ble	.L18
  56:Src/lcd.c     ****     interface->data = 0;
 316              		.loc 1 56 0 is_stmt 1
 317 0052 0022     		movs	r2, #0
 318 0054 B5F85410 		ldrh	r1, [r5, #84]
 319 0058 286D     		ldr	r0, [r5, #80]
 320 005a FFF7FEFF 		bl	HAL_GPIO_WritePin
 321              	.LVL22:
  57:Src/lcd.c     **** }
 322              		.loc 1 57 0
 323 005e 0023     		movs	r3, #0
 324 0060 85F85A30 		strb	r3, [r5, #90]
 325 0064 38BD     		pop	{r3, r4, r5, pc}
 326              		.cfi_endproc
 327              	.LFE127:
 329 0066 00BF     		.section	.text.LCDSendChar,"ax",%progbits
 330              		.align	2
 331              		.global	LCDSendChar
 332              		.thumb
 333              		.thumb_func
 335              	LCDSendChar:
 336              	.LFB125:
  30:Src/lcd.c     ****     interface->data = c;
 337              		.loc 1 30 0
 338              		.cfi_startproc
 339              		@ args = 0, pretend = 0, frame = 0
 340              		@ frame_needed = 0, uses_anonymous_args = 0
 341              	.LVL23:
 342 0000 08B5     		push	{r3, lr}
 343              	.LCFI7:
 344              		.cfi_def_cfa_offset 8
 345              		.cfi_offset 3, -8
 346              		.cfi_offset 14, -4
  31:Src/lcd.c     ****     interface->instruction = WRITE;
 347              		.loc 1 31 0
 348 0002 80F85A10 		strb	r1, [r0, #90]
  32:Src/lcd.c     ****     LCDSendInstruction(interface);
 349              		.loc 1 32 0
 350 0006 4FF40072 		mov	r2, #512
 351 000a A0F85820 		strh	r2, [r0, #88]	@ movhi
  33:Src/lcd.c     **** }
 352              		.loc 1 33 0
 353 000e FFF7FEFF 		bl	LCDSendInstruction
 354              	.LVL24:
 355 0012 08BD     		pop	{r3, pc}
 356              		.cfi_endproc
 357              	.LFE125:
 359              		.section	.text.LCDSendText,"ax",%progbits
 360              		.align	2
 361              		.global	LCDSendText
 362              		.thumb
 363              		.thumb_func
 365              	LCDSendText:
 366              	.LFB126:
ARM GAS  /tmp/ccXyJqFc.s 			page 10


  36:Src/lcd.c     ****     char *c = data;
 367              		.loc 1 36 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 0
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371              	.LVL25:
 372 0000 38B5     		push	{r3, r4, r5, lr}
 373              	.LCFI8:
 374              		.cfi_def_cfa_offset 16
 375              		.cfi_offset 3, -16
 376              		.cfi_offset 4, -12
 377              		.cfi_offset 5, -8
 378              		.cfi_offset 14, -4
 379 0002 0546     		mov	r5, r0
 380 0004 0C46     		mov	r4, r1
 381              	.LVL26:
  38:Src/lcd.c     ****         LCDSendChar(interface, *c);
 382              		.loc 1 38 0
 383 0006 03E0     		b	.L23
 384              	.LVL27:
 385              	.L24:
  39:Src/lcd.c     ****         c++;
 386              		.loc 1 39 0
 387 0008 2846     		mov	r0, r5
 388 000a FFF7FEFF 		bl	LCDSendChar
 389              	.LVL28:
  40:Src/lcd.c     ****     }
 390              		.loc 1 40 0
 391 000e 0134     		adds	r4, r4, #1
 392              	.LVL29:
 393              	.L23:
  38:Src/lcd.c     ****         LCDSendChar(interface, *c);
 394              		.loc 1 38 0
 395 0010 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 396 0012 0029     		cmp	r1, #0
 397 0014 F8D1     		bne	.L24
  42:Src/lcd.c     **** 
 398              		.loc 1 42 0
 399 0016 38BD     		pop	{r3, r4, r5, pc}
 400              		.cfi_endproc
 401              	.LFE126:
 403              		.section	.text.InstructionFunctionSet,"ax",%progbits
 404              		.align	2
 405              		.global	InstructionFunctionSet
 406              		.thumb
 407              		.thumb_func
 409              	InstructionFunctionSet:
 410              	.LFB128:
  60:Src/lcd.c     ****     interface->instruction = FUNCTIONSET;
 411              		.loc 1 60 0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415              	.LVL30:
 416 0000 10B5     		push	{r4, lr}
 417              	.LCFI9:
 418              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccXyJqFc.s 			page 11


 419              		.cfi_offset 4, -8
 420              		.cfi_offset 14, -4
  61:Src/lcd.c     ****     interface->data = (char)config[5]<<4|config[6]<<3|config[7]<<2;
 421              		.loc 1 61 0
 422 0002 2023     		movs	r3, #32
 423 0004 A0F85830 		strh	r3, [r0, #88]	@ movhi
  62:Src/lcd.c     ****     LCDSendInstruction(interface);
 424              		.loc 1 62 0
 425 0008 4B79     		ldrb	r3, [r1, #5]	@ zero_extendqisi2
 426 000a 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
 427 000c D200     		lsls	r2, r2, #3
 428 000e C979     		ldrb	r1, [r1, #7]	@ zero_extendqisi2
 429              	.LVL31:
 430 0010 42EA0313 		orr	r3, r2, r3, lsl #4
 431 0014 43EA8103 		orr	r3, r3, r1, lsl #2
 432 0018 80F85A30 		strb	r3, [r0, #90]
  63:Src/lcd.c     **** }
 433              		.loc 1 63 0
 434 001c FFF7FEFF 		bl	LCDSendInstruction
 435              	.LVL32:
 436 0020 10BD     		pop	{r4, pc}
 437              		.cfi_endproc
 438              	.LFE128:
 440 0022 00BF     		.section	.text.InstructionFunctionSetStart,"ax",%progbits
 441              		.align	2
 442              		.global	InstructionFunctionSetStart
 443              		.thumb
 444              		.thumb_func
 446              	InstructionFunctionSetStart:
 447              	.LFB129:
  66:Src/lcd.c     ****     int i;
 448              		.loc 1 66 0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 0
 451              		@ frame_needed = 0, uses_anonymous_args = 0
 452              	.LVL33:
 453 0000 70B5     		push	{r4, r5, r6, lr}
 454              	.LCFI10:
 455              		.cfi_def_cfa_offset 16
 456              		.cfi_offset 4, -16
 457              		.cfi_offset 5, -12
 458              		.cfi_offset 6, -8
 459              		.cfi_offset 14, -4
 460 0002 0646     		mov	r6, r0
 461 0004 0D46     		mov	r5, r1
  68:Src/lcd.c     ****     HAL_Delay(5);
 462              		.loc 1 68 0
 463 0006 FFF7FEFF 		bl	InstructionFunctionSet
 464              	.LVL34:
  69:Src/lcd.c     **** 
 465              		.loc 1 69 0
 466 000a 0520     		movs	r0, #5
 467 000c FFF7FEFF 		bl	HAL_Delay
 468              	.LVL35:
  71:Src/lcd.c     ****         InstructionFunctionSet(interface, config);
 469              		.loc 1 71 0
 470 0010 0024     		movs	r4, #0
ARM GAS  /tmp/ccXyJqFc.s 			page 12


 471 0012 07E0     		b	.L29
 472              	.LVL36:
 473              	.L30:
  72:Src/lcd.c     ****         HAL_Delay(1);
 474              		.loc 1 72 0 discriminator 3
 475 0014 2946     		mov	r1, r5
 476 0016 3046     		mov	r0, r6
 477 0018 FFF7FEFF 		bl	InstructionFunctionSet
 478              	.LVL37:
  73:Src/lcd.c     ****     }
 479              		.loc 1 73 0 discriminator 3
 480 001c 0120     		movs	r0, #1
 481 001e FFF7FEFF 		bl	HAL_Delay
 482              	.LVL38:
  71:Src/lcd.c     ****         InstructionFunctionSet(interface, config);
 483              		.loc 1 71 0 discriminator 3
 484 0022 0134     		adds	r4, r4, #1
 485              	.LVL39:
 486              	.L29:
  71:Src/lcd.c     ****         InstructionFunctionSet(interface, config);
 487              		.loc 1 71 0 is_stmt 0 discriminator 1
 488 0024 022C     		cmp	r4, #2
 489 0026 F5DD     		ble	.L30
  75:Src/lcd.c     **** 
 490              		.loc 1 75 0 is_stmt 1
 491 0028 70BD     		pop	{r4, r5, r6, pc}
 492              		.cfi_endproc
 493              	.LFE129:
 495 002a 00BF     		.section	.text.InstructionDisplay,"ax",%progbits
 496              		.align	2
 497              		.global	InstructionDisplay
 498              		.thumb
 499              		.thumb_func
 501              	InstructionDisplay:
 502              	.LFB130:
  77:Src/lcd.c     ****     interface->instruction = DISPLAY;
 503              		.loc 1 77 0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 0
 506              		@ frame_needed = 0, uses_anonymous_args = 0
 507              	.LVL40:
 508 0000 10B5     		push	{r4, lr}
 509              	.LCFI11:
 510              		.cfi_def_cfa_offset 8
 511              		.cfi_offset 4, -8
 512              		.cfi_offset 14, -4
  78:Src/lcd.c     ****     interface->data = (char)config[2]<<2|config[3]<<1|config[4]<<0;
 513              		.loc 1 78 0
 514 0002 0823     		movs	r3, #8
 515 0004 A0F85830 		strh	r3, [r0, #88]	@ movhi
  79:Src/lcd.c     ****     LCDSendInstruction(interface);
 516              		.loc 1 79 0
 517 0008 8B78     		ldrb	r3, [r1, #2]	@ zero_extendqisi2
 518 000a CA78     		ldrb	r2, [r1, #3]	@ zero_extendqisi2
 519 000c 5200     		lsls	r2, r2, #1
 520 000e 0979     		ldrb	r1, [r1, #4]	@ zero_extendqisi2
 521              	.LVL41:
ARM GAS  /tmp/ccXyJqFc.s 			page 13


 522 0010 42EA8303 		orr	r3, r2, r3, lsl #2
 523 0014 0B43     		orrs	r3, r3, r1
 524 0016 80F85A30 		strb	r3, [r0, #90]
  80:Src/lcd.c     **** }
 525              		.loc 1 80 0
 526 001a FFF7FEFF 		bl	LCDSendInstruction
 527              	.LVL42:
 528 001e 10BD     		pop	{r4, pc}
 529              		.cfi_endproc
 530              	.LFE130:
 532              		.section	.text.InstructionEntryModeSet,"ax",%progbits
 533              		.align	2
 534              		.global	InstructionEntryModeSet
 535              		.thumb
 536              		.thumb_func
 538              	InstructionEntryModeSet:
 539              	.LFB131:
  83:Src/lcd.c     ****     interface->instruction = ENTRYMODESET;
 540              		.loc 1 83 0
 541              		.cfi_startproc
 542              		@ args = 0, pretend = 0, frame = 0
 543              		@ frame_needed = 0, uses_anonymous_args = 0
 544              	.LVL43:
 545 0000 10B5     		push	{r4, lr}
 546              	.LCFI12:
 547              		.cfi_def_cfa_offset 8
 548              		.cfi_offset 4, -8
 549              		.cfi_offset 14, -4
  84:Src/lcd.c     ****     interface->data = (char)config[1]<<1|config[0]<<0;
 550              		.loc 1 84 0
 551 0002 0423     		movs	r3, #4
 552 0004 A0F85830 		strh	r3, [r0, #88]	@ movhi
  85:Src/lcd.c     ****     LCDSendInstruction(interface);
 553              		.loc 1 85 0
 554 0008 4C78     		ldrb	r4, [r1, #1]	@ zero_extendqisi2
 555 000a 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 556 000c 43EA4403 		orr	r3, r3, r4, lsl #1
 557 0010 80F85A30 		strb	r3, [r0, #90]
  86:Src/lcd.c     **** }
 558              		.loc 1 86 0
 559 0014 FFF7FEFF 		bl	LCDSendInstruction
 560              	.LVL44:
 561 0018 10BD     		pop	{r4, pc}
 562              		.cfi_endproc
 563              	.LFE131:
 565 001a 00BF     		.section	.text.InstructionClearDisplay,"ax",%progbits
 566              		.align	2
 567              		.global	InstructionClearDisplay
 568              		.thumb
 569              		.thumb_func
 571              	InstructionClearDisplay:
 572              	.LFB132:
  89:Src/lcd.c     ****     interface->instruction = CLEARDISPLAY;
 573              		.loc 1 89 0
 574              		.cfi_startproc
 575              		@ args = 0, pretend = 0, frame = 0
 576              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccXyJqFc.s 			page 14


 577              	.LVL45:
 578 0000 08B5     		push	{r3, lr}
 579              	.LCFI13:
 580              		.cfi_def_cfa_offset 8
 581              		.cfi_offset 3, -8
 582              		.cfi_offset 14, -4
  90:Src/lcd.c     ****     interface->data = 0;
 583              		.loc 1 90 0
 584 0002 0122     		movs	r2, #1
 585 0004 A0F85820 		strh	r2, [r0, #88]	@ movhi
  91:Src/lcd.c     ****     LCDSendInstruction(interface);
 586              		.loc 1 91 0
 587 0008 0022     		movs	r2, #0
 588 000a 80F85A20 		strb	r2, [r0, #90]
  92:Src/lcd.c     **** }
 589              		.loc 1 92 0
 590 000e FFF7FEFF 		bl	LCDSendInstruction
 591              	.LVL46:
 592 0012 08BD     		pop	{r3, pc}
 593              		.cfi_endproc
 594              	.LFE132:
 596              		.section	.text.InstructionReturnHome,"ax",%progbits
 597              		.align	2
 598              		.global	InstructionReturnHome
 599              		.thumb
 600              		.thumb_func
 602              	InstructionReturnHome:
 603              	.LFB133:
  95:Src/lcd.c     ****     interface->instruction = RETURNHOME;
 604              		.loc 1 95 0
 605              		.cfi_startproc
 606              		@ args = 0, pretend = 0, frame = 0
 607              		@ frame_needed = 0, uses_anonymous_args = 0
 608              	.LVL47:
 609 0000 08B5     		push	{r3, lr}
 610              	.LCFI14:
 611              		.cfi_def_cfa_offset 8
 612              		.cfi_offset 3, -8
 613              		.cfi_offset 14, -4
  96:Src/lcd.c     ****     LCDSendInstruction(interface);
 614              		.loc 1 96 0
 615 0002 0223     		movs	r3, #2
 616 0004 A0F85830 		strh	r3, [r0, #88]	@ movhi
  97:Src/lcd.c     **** }
 617              		.loc 1 97 0
 618 0008 FFF7FEFF 		bl	LCDSendInstruction
 619              	.LVL48:
 620 000c 08BD     		pop	{r3, pc}
 621              		.cfi_endproc
 622              	.LFE133:
 624 000e 00BF     		.section	.text.LCDInit,"ax",%progbits
 625              		.align	2
 626              		.global	LCDInit
 627              		.thumb
 628              		.thumb_func
 630              	LCDInit:
 631              	.LFB134:
ARM GAS  /tmp/ccXyJqFc.s 			page 15


 100:Src/lcd.c     ****     LCDInterfaceInitialisation(interface);
 632              		.loc 1 100 0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 0
 635              		@ frame_needed = 0, uses_anonymous_args = 0
 636              	.LVL49:
 637 0000 38B5     		push	{r3, r4, r5, lr}
 638              	.LCFI15:
 639              		.cfi_def_cfa_offset 16
 640              		.cfi_offset 3, -16
 641              		.cfi_offset 4, -12
 642              		.cfi_offset 5, -8
 643              		.cfi_offset 14, -4
 644 0002 0446     		mov	r4, r0
 645 0004 0D46     		mov	r5, r1
 101:Src/lcd.c     ****     HAL_Delay(20);
 646              		.loc 1 101 0
 647 0006 FFF7FEFF 		bl	LCDInterfaceInitialisation
 648              	.LVL50:
 102:Src/lcd.c     ****     InstructionFunctionSetStart(interface, config);
 649              		.loc 1 102 0
 650 000a 1420     		movs	r0, #20
 651 000c FFF7FEFF 		bl	HAL_Delay
 652              	.LVL51:
 103:Src/lcd.c     ****     HAL_Delay(1);
 653              		.loc 1 103 0
 654 0010 2946     		mov	r1, r5
 655 0012 2046     		mov	r0, r4
 656 0014 FFF7FEFF 		bl	InstructionFunctionSetStart
 657              	.LVL52:
 104:Src/lcd.c     ****     InstructionDisplay(interface, config);
 658              		.loc 1 104 0
 659 0018 0120     		movs	r0, #1
 660 001a FFF7FEFF 		bl	HAL_Delay
 661              	.LVL53:
 105:Src/lcd.c     ****     HAL_Delay(1);
 662              		.loc 1 105 0
 663 001e 2946     		mov	r1, r5
 664 0020 2046     		mov	r0, r4
 665 0022 FFF7FEFF 		bl	InstructionDisplay
 666              	.LVL54:
 106:Src/lcd.c     ****     InstructionClearDisplay(interface);
 667              		.loc 1 106 0
 668 0026 0120     		movs	r0, #1
 669 0028 FFF7FEFF 		bl	HAL_Delay
 670              	.LVL55:
 107:Src/lcd.c     ****     HAL_Delay(1);
 671              		.loc 1 107 0
 672 002c 2046     		mov	r0, r4
 673 002e FFF7FEFF 		bl	InstructionClearDisplay
 674              	.LVL56:
 108:Src/lcd.c     ****     InstructionReturnHome(interface);
 675              		.loc 1 108 0
 676 0032 0120     		movs	r0, #1
 677 0034 FFF7FEFF 		bl	HAL_Delay
 678              	.LVL57:
 109:Src/lcd.c     **** }
ARM GAS  /tmp/ccXyJqFc.s 			page 16


 679              		.loc 1 109 0
 680 0038 2046     		mov	r0, r4
 681 003a FFF7FEFF 		bl	InstructionReturnHome
 682              	.LVL58:
 683 003e 38BD     		pop	{r3, r4, r5, pc}
 684              		.cfi_endproc
 685              	.LFE134:
 687              		.section	.text.InstructionCurseurPosition,"ax",%progbits
 688              		.align	2
 689              		.global	InstructionCurseurPosition
 690              		.thumb
 691              		.thumb_func
 693              	InstructionCurseurPosition:
 694              	.LFB135:
 112:Src/lcd.c     ****     interface->instruction = SETDDRAM;
 695              		.loc 1 112 0
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 0
 698              		@ frame_needed = 0, uses_anonymous_args = 0
 699              	.LVL59:
 700 0000 08B5     		push	{r3, lr}
 701              	.LCFI16:
 702              		.cfi_def_cfa_offset 8
 703              		.cfi_offset 3, -8
 704              		.cfi_offset 14, -4
 113:Src/lcd.c     ****     interface->data = ddram;
 705              		.loc 1 113 0
 706 0002 4022     		movs	r2, #64
 707 0004 A0F85820 		strh	r2, [r0, #88]	@ movhi
 114:Src/lcd.c     ****     LCDSendInstruction(interface);
 708              		.loc 1 114 0
 709 0008 80F85A10 		strb	r1, [r0, #90]
 115:Src/lcd.c     **** }
 710              		.loc 1 115 0
 711 000c FFF7FEFF 		bl	LCDSendInstruction
 712              	.LVL60:
 713 0010 08BD     		pop	{r3, pc}
 714              		.cfi_endproc
 715              	.LFE135:
 717 0012 00BF     		.section	.text.CursorDisplayShift,"ax",%progbits
 718              		.align	2
 719              		.global	CursorDisplayShift
 720              		.thumb
 721              		.thumb_func
 723              	CursorDisplayShift:
 724              	.LFB138:
 144:Src/lcd.c     **** }
 145:Src/lcd.c     **** 
 146:Src/lcd.c     **** void CursorDisplayShift(LCDInterface* interface, char config[10]){
 725              		.loc 1 146 0
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 0
 728              		@ frame_needed = 0, uses_anonymous_args = 0
 729              	.LVL61:
 730 0000 10B5     		push	{r4, lr}
 731              	.LCFI17:
 732              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccXyJqFc.s 			page 17


 733              		.cfi_offset 4, -8
 734              		.cfi_offset 14, -4
 147:Src/lcd.c     ****     interface->instruction = SHIFT;
 735              		.loc 1 147 0
 736 0002 1023     		movs	r3, #16
 737 0004 A0F85830 		strh	r3, [r0, #88]	@ movhi
 148:Src/lcd.c     ****     interface->data = (char)config[8]<<3|config[9]<<2;
 738              		.loc 1 148 0
 739 0008 0C7A     		ldrb	r4, [r1, #8]	@ zero_extendqisi2
 740 000a 4B7A     		ldrb	r3, [r1, #9]	@ zero_extendqisi2
 741 000c 9B00     		lsls	r3, r3, #2
 742 000e 43EAC403 		orr	r3, r3, r4, lsl #3
 743 0012 80F85A30 		strb	r3, [r0, #90]
 149:Src/lcd.c     ****     LCDSendInstruction(interface);
 744              		.loc 1 149 0
 745 0016 FFF7FEFF 		bl	LCDSendInstruction
 746              	.LVL62:
 747 001a 10BD     		pop	{r4, pc}
 748              		.cfi_endproc
 749              	.LFE138:
 751              		.section	.text.MoveScreen,"ax",%progbits
 752              		.align	2
 753              		.global	MoveScreen
 754              		.thumb
 755              		.thumb_func
 757              	MoveScreen:
 758              	.LFB139:
 150:Src/lcd.c     **** }
 151:Src/lcd.c     **** 
 152:Src/lcd.c     **** void MoveScreen(LCDInterface* interface, char direction){
 759              		.loc 1 152 0
 760              		.cfi_startproc
 761              		@ args = 0, pretend = 0, frame = 16
 762              		@ frame_needed = 0, uses_anonymous_args = 0
 763              	.LVL63:
 764 0000 00B5     		push	{lr}
 765              	.LCFI18:
 766              		.cfi_def_cfa_offset 4
 767              		.cfi_offset 14, -4
 768 0002 85B0     		sub	sp, sp, #20
 769              	.LCFI19:
 770              		.cfi_def_cfa_offset 24
 153:Src/lcd.c     ****     CursorDisplayShift(interface, (char[10]){0,0,0,0,0,0,0,0,1,direction});
 771              		.loc 1 153 0
 772 0004 0023     		movs	r3, #0
 773 0006 8DF80430 		strb	r3, [sp, #4]
 774 000a 8DF80530 		strb	r3, [sp, #5]
 775 000e 8DF80630 		strb	r3, [sp, #6]
 776 0012 8DF80730 		strb	r3, [sp, #7]
 777 0016 8DF80830 		strb	r3, [sp, #8]
 778 001a 8DF80930 		strb	r3, [sp, #9]
 779 001e 8DF80A30 		strb	r3, [sp, #10]
 780 0022 8DF80B30 		strb	r3, [sp, #11]
 781 0026 0123     		movs	r3, #1
 782 0028 8DF80C30 		strb	r3, [sp, #12]
 783 002c 8DF80D10 		strb	r1, [sp, #13]
 784 0030 01A9     		add	r1, sp, #4
ARM GAS  /tmp/ccXyJqFc.s 			page 18


 785              	.LVL64:
 786 0032 FFF7FEFF 		bl	CursorDisplayShift
 787              	.LVL65:
 154:Src/lcd.c     **** }
 788              		.loc 1 154 0
 789 0036 05B0     		add	sp, sp, #20
 790              	.LCFI20:
 791              		.cfi_def_cfa_offset 4
 792              		@ sp needed
 793 0038 5DF804FB 		ldr	pc, [sp], #4
 794              		.cfi_endproc
 795              	.LFE139:
 797              		.section	.text.MoveCursor,"ax",%progbits
 798              		.align	2
 799              		.global	MoveCursor
 800              		.thumb
 801              		.thumb_func
 803              	MoveCursor:
 804              	.LFB140:
 155:Src/lcd.c     **** 
 156:Src/lcd.c     **** void MoveCursor(LCDInterface* interface, char direction){
 805              		.loc 1 156 0
 806              		.cfi_startproc
 807              		@ args = 0, pretend = 0, frame = 16
 808              		@ frame_needed = 0, uses_anonymous_args = 0
 809              	.LVL66:
 810 0000 00B5     		push	{lr}
 811              	.LCFI21:
 812              		.cfi_def_cfa_offset 4
 813              		.cfi_offset 14, -4
 814 0002 85B0     		sub	sp, sp, #20
 815              	.LCFI22:
 816              		.cfi_def_cfa_offset 24
 157:Src/lcd.c     ****     CursorDisplayShift(interface, (char[10]){0,0,0,0,0,0,0,0,0,direction});
 817              		.loc 1 157 0
 818 0004 0023     		movs	r3, #0
 819 0006 0193     		str	r3, [sp, #4]
 820 0008 0293     		str	r3, [sp, #8]
 821 000a ADF80C30 		strh	r3, [sp, #12]	@ movhi
 822 000e 8DF80D10 		strb	r1, [sp, #13]
 823 0012 01A9     		add	r1, sp, #4
 824              	.LVL67:
 825 0014 FFF7FEFF 		bl	CursorDisplayShift
 826              	.LVL68:
 158:Src/lcd.c     **** }...
 827              		.loc 1 158 0
 828 0018 05B0     		add	sp, sp, #20
 829              	.LCFI23:
 830              		.cfi_def_cfa_offset 4
 831              		@ sp needed
 832 001a 5DF804FB 		ldr	pc, [sp], #4
 833              		.cfi_endproc
 834              	.LFE140:
 836 001e 00BF     		.text
 837              	.Letext0:
 838              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 839              		.file 3 "/usr/include/newlib/sys/_stdint.h"
ARM GAS  /tmp/ccXyJqFc.s 			page 19


 840              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 841              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 842              		.file 6 "Inc/lcd.h"
 843              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 844              		.file 8 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  /tmp/ccXyJqFc.s 			page 20


DEFINED SYMBOLS
                            *ABS*:00000000 lcd.c
     /tmp/ccXyJqFc.s:22     .text.LCDInterfaceInitialisation:00000000 $t
     /tmp/ccXyJqFc.s:27     .text.LCDInterfaceInitialisation:00000000 LCDInterfaceInitialisation
     /tmp/ccXyJqFc.s:112    .text.LCDInterfaceInitialisation:00000058 $d
     /tmp/ccXyJqFc.s:119    .text.PinChangeMode:00000000 $t
     /tmp/ccXyJqFc.s:124    .text.PinChangeMode:00000000 PinChangeMode
     /tmp/ccXyJqFc.s:178    .text.WaitLCD:00000000 $t
     /tmp/ccXyJqFc.s:183    .text.WaitLCD:00000000 WaitLCD
     /tmp/ccXyJqFc.s:246    .text.WaitLCD:00000058 $d
     /tmp/ccXyJqFc.s:251    .text.LCDSendInstruction:00000000 $t
     /tmp/ccXyJqFc.s:256    .text.LCDSendInstruction:00000000 LCDSendInstruction
     /tmp/ccXyJqFc.s:330    .text.LCDSendChar:00000000 $t
     /tmp/ccXyJqFc.s:335    .text.LCDSendChar:00000000 LCDSendChar
     /tmp/ccXyJqFc.s:360    .text.LCDSendText:00000000 $t
     /tmp/ccXyJqFc.s:365    .text.LCDSendText:00000000 LCDSendText
     /tmp/ccXyJqFc.s:404    .text.InstructionFunctionSet:00000000 $t
     /tmp/ccXyJqFc.s:409    .text.InstructionFunctionSet:00000000 InstructionFunctionSet
     /tmp/ccXyJqFc.s:441    .text.InstructionFunctionSetStart:00000000 $t
     /tmp/ccXyJqFc.s:446    .text.InstructionFunctionSetStart:00000000 InstructionFunctionSetStart
     /tmp/ccXyJqFc.s:496    .text.InstructionDisplay:00000000 $t
     /tmp/ccXyJqFc.s:501    .text.InstructionDisplay:00000000 InstructionDisplay
     /tmp/ccXyJqFc.s:533    .text.InstructionEntryModeSet:00000000 $t
     /tmp/ccXyJqFc.s:538    .text.InstructionEntryModeSet:00000000 InstructionEntryModeSet
     /tmp/ccXyJqFc.s:566    .text.InstructionClearDisplay:00000000 $t
     /tmp/ccXyJqFc.s:571    .text.InstructionClearDisplay:00000000 InstructionClearDisplay
     /tmp/ccXyJqFc.s:597    .text.InstructionReturnHome:00000000 $t
     /tmp/ccXyJqFc.s:602    .text.InstructionReturnHome:00000000 InstructionReturnHome
     /tmp/ccXyJqFc.s:625    .text.LCDInit:00000000 $t
     /tmp/ccXyJqFc.s:630    .text.LCDInit:00000000 LCDInit
     /tmp/ccXyJqFc.s:688    .text.InstructionCurseurPosition:00000000 $t
     /tmp/ccXyJqFc.s:693    .text.InstructionCurseurPosition:00000000 InstructionCurseurPosition
     /tmp/ccXyJqFc.s:718    .text.CursorDisplayShift:00000000 $t
     /tmp/ccXyJqFc.s:723    .text.CursorDisplayShift:00000000 CursorDisplayShift
     /tmp/ccXyJqFc.s:752    .text.MoveScreen:00000000 $t
     /tmp/ccXyJqFc.s:757    .text.MoveScreen:00000000 MoveScreen
     /tmp/ccXyJqFc.s:798    .text.MoveCursor:00000000 $t
     /tmp/ccXyJqFc.s:803    .text.MoveCursor:00000000 MoveCursor
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_DeInit
HAL_GPIO_Init
HAL_GPIO_WritePin
HAL_GPIO_ReadPin
HAL_Delay
