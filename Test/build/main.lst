ARM GAS  /tmp/ccbvFJfS.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemClock_Config,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	SystemClock_Config
  21              		.arch armv7e-m
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu fpv4-sp-d16
  27              	SystemClock_Config:
  28              	.LFB127:
  29              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
ARM GAS  /tmp/ccbvFJfS.s 			page 2


  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  40:Src/main.c    **** #include "main.h"
  41:Src/main.c    **** #include "stm32f4xx_hal.h"
  42:Src/main.c    **** #include "usart.h"
  43:Src/main.c    **** #include "gpio.h"
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE BEGIN Includes */
  46:Src/main.c    **** #include "lcd.h"
  47:Src/main.c    **** /* USER CODE END Includes */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  50:Src/main.c    **** 
  51:Src/main.c    **** /* USER CODE BEGIN PV */
  52:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE END PV */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  57:Src/main.c    **** void SystemClock_Config(void);
  58:Src/main.c    **** 
  59:Src/main.c    **** /* USER CODE BEGIN PFP */
  60:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE END PFP */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* USER CODE BEGIN 0 */
  65:Src/main.c    **** LCDInterface interface;
  66:Src/main.c    **** /* USER CODE END 0 */
  67:Src/main.c    **** 
  68:Src/main.c    **** /**
  69:Src/main.c    ****   * @brief  The application entry point.
  70:Src/main.c    ****   *
  71:Src/main.c    ****   * @retval None
  72:Src/main.c    ****   */
  73:Src/main.c    **** int main(void)
  74:Src/main.c    **** {
  75:Src/main.c    ****   /* USER CODE BEGIN 1 */
  76:Src/main.c    **** 
  77:Src/main.c    ****   /* USER CODE END 1 */
  78:Src/main.c    **** 
  79:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  80:Src/main.c    **** 
  81:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  82:Src/main.c    ****   HAL_Init();
  83:Src/main.c    **** 
  84:Src/main.c    ****   /* USER CODE BEGIN Init */
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* USER CODE END Init */
ARM GAS  /tmp/ccbvFJfS.s 			page 3


  87:Src/main.c    **** 
  88:Src/main.c    ****   /* Configure the system clock */
  89:Src/main.c    ****   SystemClock_Config();
  90:Src/main.c    **** 
  91:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* USER CODE END SysInit */
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* Initialize all configured peripherals */
  96:Src/main.c    ****   MX_GPIO_Init();
  97:Src/main.c    ****   MX_USART2_UART_Init();
  98:Src/main.c    ****   /* USER CODE BEGIN 2 */
  99:Src/main.c    ****   char configLCD[10] = {1,0,1,1,1,1,1,0,0,0};
 100:Src/main.c    **** 
 101:Src/main.c    ****   LCDInit(&interface, configLCD);
 102:Src/main.c    ****   // LCDSendText(&interface, "Bonne annee !");
 103:Src/main.c    **** 
 104:Src/main.c    ****   /* USER CODE END 2 */
 105:Src/main.c    **** 
 106:Src/main.c    ****   /* Infinite loop */
 107:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 108:Src/main.c    ****   while (1)
 109:Src/main.c    ****   {
 110:Src/main.c    **** 
 111:Src/main.c    ****   /* USER CODE END WHILE */
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* USER CODE BEGIN 3 */
 114:Src/main.c    ****   HAL_GPIO_TogglePin(LD2_GPIO_Port, LD2_Pin);
 115:Src/main.c    ****   HAL_Delay(1000);
 116:Src/main.c    ****   }
 117:Src/main.c    ****   /* USER CODE END 3 */
 118:Src/main.c    **** 
 119:Src/main.c    **** }
 120:Src/main.c    **** 
 121:Src/main.c    **** /**
 122:Src/main.c    ****   * @brief System Clock Configuration
 123:Src/main.c    ****   * @retval None
 124:Src/main.c    ****   */
 125:Src/main.c    **** void SystemClock_Config(void)
 126:Src/main.c    **** {
  30              		.loc 1 126 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 80
  33              		@ frame_needed = 0, uses_anonymous_args = 0
 127:Src/main.c    **** 
 128:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
  34              		.loc 1 128 3 view .LVU1
 129:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
  35              		.loc 1 129 3 view .LVU2
 130:Src/main.c    **** 
 131:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 132:Src/main.c    ****     */
 133:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
  36              		.loc 1 133 3 view .LVU3
  37              	.LBB16:
  38              		.loc 1 133 3 view .LVU4
  39              	.LBE16:
ARM GAS  /tmp/ccbvFJfS.s 			page 4


 126:Src/main.c    **** 
  40              		.loc 1 126 1 is_stmt 0 view .LVU5
  41 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  42              	.LCFI0:
  43              		.cfi_def_cfa_offset 20
  44              		.cfi_offset 4, -20
  45              		.cfi_offset 5, -16
  46              		.cfi_offset 6, -12
  47              		.cfi_offset 7, -8
  48              		.cfi_offset 14, -4
  49 0002 95B0     		sub	sp, sp, #84
  50              	.LCFI1:
  51              		.cfi_def_cfa_offset 104
  52              	.LBB17:
  53              		.loc 1 133 3 view .LVU6
  54 0004 0022     		movs	r2, #0
  55 0006 294B     		ldr	r3, .L8
  56 0008 0092     		str	r2, [sp]
  57              		.loc 1 133 3 is_stmt 1 view .LVU7
  58 000a 186C     		ldr	r0, [r3, #64]
  59              	.LBE17:
  60              	.LBB18:
 134:Src/main.c    **** 
 135:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
  61              		.loc 1 135 3 is_stmt 0 view .LVU8
  62 000c 2849     		ldr	r1, .L8+4
  63              	.LBE18:
  64              	.LBB19:
 133:Src/main.c    **** 
  65              		.loc 1 133 3 view .LVU9
  66 000e 40F08050 		orr	r0, r0, #268435456
  67 0012 1864     		str	r0, [r3, #64]
 133:Src/main.c    **** 
  68              		.loc 1 133 3 is_stmt 1 view .LVU10
  69 0014 1B6C     		ldr	r3, [r3, #64]
  70 0016 03F08053 		and	r3, r3, #268435456
  71 001a 0093     		str	r3, [sp]
 133:Src/main.c    **** 
  72              		.loc 1 133 3 view .LVU11
  73 001c 009B     		ldr	r3, [sp]
  74              	.LBE19:
  75              		.loc 1 135 3 view .LVU12
  76              	.LBB20:
  77              		.loc 1 135 3 view .LVU13
  78 001e 0192     		str	r2, [sp, #4]
  79              		.loc 1 135 3 view .LVU14
  80 0020 0B68     		ldr	r3, [r1]
  81 0022 23F44043 		bic	r3, r3, #49152
  82 0026 43F40043 		orr	r3, r3, #32768
  83 002a 0B60     		str	r3, [r1]
  84              		.loc 1 135 3 view .LVU15
  85 002c 0B68     		ldr	r3, [r1]
  86              	.LBE20:
 136:Src/main.c    **** 
 137:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 138:Src/main.c    ****     */
 139:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
ARM GAS  /tmp/ccbvFJfS.s 			page 5


 140:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 141:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 142:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 143:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
  87              		.loc 1 143 35 is_stmt 0 view .LVU16
  88 002e 0F92     		str	r2, [sp, #60]
  89              	.LBB21:
 135:Src/main.c    **** 
  90              		.loc 1 135 3 view .LVU17
  91 0030 03F44043 		and	r3, r3, #49152
  92              	.LBE21:
 140:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
  93              		.loc 1 140 30 view .LVU18
  94 0034 0120     		movs	r0, #1
  95              	.LBB22:
 135:Src/main.c    **** 
  96              		.loc 1 135 3 view .LVU19
  97 0036 0193     		str	r3, [sp, #4]
 135:Src/main.c    **** 
  98              		.loc 1 135 3 is_stmt 1 view .LVU20
  99              	.LBE22:
 139:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 100              		.loc 1 139 36 is_stmt 0 view .LVU21
 101 0038 0224     		movs	r4, #2
 141:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 102              		.loc 1 141 41 view .LVU22
 103 003a 1023     		movs	r3, #16
 144:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 145:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 104              		.loc 1 145 30 view .LVU23
 105 003c 4FF4A871 		mov	r1, #336
 146:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 106              		.loc 1 146 30 view .LVU24
 107 0040 0425     		movs	r5, #4
 147:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 108              		.loc 1 147 30 view .LVU25
 109 0042 0722     		movs	r2, #7
 140:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 110              		.loc 1 140 30 view .LVU26
 111 0044 0B90     		str	r0, [sp, #44]
 148:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 112              		.loc 1 148 7 view .LVU27
 113 0046 08A8     		add	r0, sp, #32
 114              	.LBB23:
 135:Src/main.c    **** 
 115              		.loc 1 135 3 view .LVU28
 116 0048 019E     		ldr	r6, [sp, #4]
 117              	.LBE23:
 139:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 118              		.loc 1 139 3 is_stmt 1 view .LVU29
 139:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 119              		.loc 1 139 36 is_stmt 0 view .LVU30
 120 004a 0894     		str	r4, [sp, #32]
 140:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 121              		.loc 1 140 3 is_stmt 1 view .LVU31
 141:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 122              		.loc 1 141 3 view .LVU32
ARM GAS  /tmp/ccbvFJfS.s 			page 6


 142:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 123              		.loc 1 142 34 is_stmt 0 view .LVU33
 124 004c 0E94     		str	r4, [sp, #56]
 141:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 125              		.loc 1 141 41 view .LVU34
 126 004e 0C93     		str	r3, [sp, #48]
 142:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 127              		.loc 1 142 3 is_stmt 1 view .LVU35
 143:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 128              		.loc 1 143 3 view .LVU36
 144:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 129              		.loc 1 144 3 view .LVU37
 145:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 130              		.loc 1 145 30 is_stmt 0 view .LVU38
 131 0050 CDE91031 		strd	r3, r1, [sp, #64]
 146:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 132              		.loc 1 146 3 is_stmt 1 view .LVU39
 147:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 133              		.loc 1 147 30 is_stmt 0 view .LVU40
 134 0054 CDE91252 		strd	r5, r2, [sp, #72]
 135              		.loc 1 148 3 is_stmt 1 view .LVU41
 136              		.loc 1 148 7 is_stmt 0 view .LVU42
 137 0058 FFF7FEFF 		bl	HAL_RCC_OscConfig
 138              	.LVL0:
 139              		.loc 1 148 6 view .LVU43
 140 005c 00B1     		cbz	r0, .L2
 141              	.L3:
 149:Src/main.c    ****   {
 150:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 151:Src/main.c    ****   }
 152:Src/main.c    **** 
 153:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 154:Src/main.c    ****     */
 155:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 156:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 157:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 158:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 159:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 160:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 161:Src/main.c    **** 
 162:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 163:Src/main.c    ****   {
 164:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 165:Src/main.c    ****   }
 166:Src/main.c    **** 
 167:Src/main.c    ****     /**Configure the Systick interrupt time 
 168:Src/main.c    ****     */
 169:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 170:Src/main.c    **** 
 171:Src/main.c    ****     /**Configure the Systick 
 172:Src/main.c    ****     */
 173:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 174:Src/main.c    **** 
 175:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 176:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 177:Src/main.c    **** }
 178:Src/main.c    **** 
ARM GAS  /tmp/ccbvFJfS.s 			page 7


 179:Src/main.c    **** /* USER CODE BEGIN 4 */
 180:Src/main.c    **** 
 181:Src/main.c    **** /* USER CODE END 4 */
 182:Src/main.c    **** 
 183:Src/main.c    **** /**
 184:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 185:Src/main.c    ****   * @param  file: The file name as string.
 186:Src/main.c    ****   * @param  line: The line in file as a number.
 187:Src/main.c    ****   * @retval None
 188:Src/main.c    ****   */
 189:Src/main.c    **** void _Error_Handler(char *file, int line)
 190:Src/main.c    **** {
 191:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 192:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 193:Src/main.c    ****   while(1)
 142              		.loc 1 193 3 is_stmt 1 view .LVU44
 194:Src/main.c    ****   {
 195:Src/main.c    ****   }
 143              		.loc 1 195 3 view .LVU45
 193:Src/main.c    ****   {
 144              		.loc 1 193 3 view .LVU46
 145              		.loc 1 195 3 view .LVU47
 146 005e FEE7     		b	.L3
 147              	.L2:
 148              	.LBB24:
 149              	.LBB25:
 155:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 150              		.loc 1 155 3 view .LVU48
 157:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 151              		.loc 1 157 3 view .LVU49
 158:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 152              		.loc 1 158 3 view .LVU50
 159:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 153              		.loc 1 159 3 view .LVU51
 154 0060 0346     		mov	r3, r0
 162:Src/main.c    ****   {
 155              		.loc 1 162 7 is_stmt 0 view .LVU52
 156 0062 2146     		mov	r1, r4
 160:Src/main.c    **** 
 157              		.loc 1 160 36 view .LVU53
 158 0064 0693     		str	r3, [sp, #24]
 155:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 159              		.loc 1 155 31 view .LVU54
 160 0066 0022     		movs	r2, #0
 161 0068 4FF48053 		mov	r3, #4096
 162 006c 0F26     		movs	r6, #15
 163 006e 0227     		movs	r7, #2
 162:Src/main.c    ****   {
 164              		.loc 1 162 7 view .LVU55
 165 0070 02A8     		add	r0, sp, #8
 155:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 166              		.loc 1 155 31 view .LVU56
 167 0072 CDE90267 		strd	r6, [sp, #8]
 168 0076 CDE90423 		strd	r2, [sp, #16]
 160:Src/main.c    **** 
 169              		.loc 1 160 3 is_stmt 1 view .LVU57
 162:Src/main.c    ****   {
ARM GAS  /tmp/ccbvFJfS.s 			page 8


 170              		.loc 1 162 3 view .LVU58
 162:Src/main.c    ****   {
 171              		.loc 1 162 7 is_stmt 0 view .LVU59
 172 007a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 173              	.LVL1:
 162:Src/main.c    ****   {
 174              		.loc 1 162 6 view .LVU60
 175 007e 0446     		mov	r4, r0
 176 0080 00B1     		cbz	r0, .L4
 177              	.L5:
 178              	.LBE25:
 179              	.LBE24:
 193:Src/main.c    ****   {
 180              		.loc 1 193 3 is_stmt 1 view .LVU61
 181              		.loc 1 195 3 view .LVU62
 193:Src/main.c    ****   {
 182              		.loc 1 193 3 view .LVU63
 183              		.loc 1 195 3 view .LVU64
 184 0082 FEE7     		b	.L5
 185              	.L4:
 186              	.LBB27:
 187              	.LBB26:
 169:Src/main.c    **** 
 188              		.loc 1 169 3 view .LVU65
 169:Src/main.c    **** 
 189              		.loc 1 169 22 is_stmt 0 view .LVU66
 190 0084 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 191              	.LVL2:
 169:Src/main.c    **** 
 192              		.loc 1 169 3 view .LVU67
 193 0088 0A4B     		ldr	r3, .L8+8
 194 008a A3FB0030 		umull	r3, r0, r3, r0
 195 008e 8009     		lsrs	r0, r0, #6
 196 0090 FFF7FEFF 		bl	HAL_SYSTICK_Config
 197              	.LVL3:
 173:Src/main.c    **** 
 198              		.loc 1 173 3 is_stmt 1 view .LVU68
 199 0094 2846     		mov	r0, r5
 200 0096 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 201              	.LVL4:
 176:Src/main.c    **** }
 202              		.loc 1 176 3 view .LVU69
 203 009a 2246     		mov	r2, r4
 204 009c 2146     		mov	r1, r4
 205 009e 4FF0FF30 		mov	r0, #-1
 206 00a2 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 207              	.LVL5:
 208              	.LBE26:
 209              	.LBE27:
 177:Src/main.c    **** 
 210              		.loc 1 177 1 is_stmt 0 view .LVU70
 211 00a6 15B0     		add	sp, sp, #84
 212              	.LCFI2:
 213              		.cfi_def_cfa_offset 20
 214              		@ sp needed
 215 00a8 F0BD     		pop	{r4, r5, r6, r7, pc}
 216              	.L9:
ARM GAS  /tmp/ccbvFJfS.s 			page 9


 217 00aa 00BF     		.align	2
 218              	.L8:
 219 00ac 00380240 		.word	1073887232
 220 00b0 00700040 		.word	1073770496
 221 00b4 D34D6210 		.word	274877907
 222              		.cfi_endproc
 223              	.LFE127:
 225              		.section	.text.startup.main,"ax",%progbits
 226              		.align	1
 227              		.p2align 2,,3
 228              		.global	main
 229              		.syntax unified
 230              		.thumb
 231              		.thumb_func
 232              		.fpu fpv4-sp-d16
 234              	main:
 235              	.LFB126:
  74:Src/main.c    ****   /* USER CODE BEGIN 1 */
 236              		.loc 1 74 1 is_stmt 1 view -0
 237              		.cfi_startproc
 238              		@ Volatile: function does not return.
 239              		@ args = 0, pretend = 0, frame = 16
 240              		@ frame_needed = 0, uses_anonymous_args = 0
  82:Src/main.c    **** 
 241              		.loc 1 82 3 view .LVU72
  74:Src/main.c    ****   /* USER CODE BEGIN 1 */
 242              		.loc 1 74 1 is_stmt 0 view .LVU73
 243 0000 00B5     		push	{lr}
 244              	.LCFI3:
 245              		.cfi_def_cfa_offset 4
 246              		.cfi_offset 14, -4
 247 0002 85B0     		sub	sp, sp, #20
 248              	.LCFI4:
 249              		.cfi_def_cfa_offset 24
  82:Src/main.c    **** 
 250              		.loc 1 82 3 view .LVU74
 251 0004 FFF7FEFF 		bl	HAL_Init
 252              	.LVL6:
  89:Src/main.c    **** 
 253              		.loc 1 89 3 is_stmt 1 view .LVU75
 254 0008 FFF7FEFF 		bl	SystemClock_Config
 255              	.LVL7:
  96:Src/main.c    ****   MX_USART2_UART_Init();
 256              		.loc 1 96 3 view .LVU76
 257 000c FFF7FEFF 		bl	MX_GPIO_Init
 258              	.LVL8:
  97:Src/main.c    ****   /* USER CODE BEGIN 2 */
 259              		.loc 1 97 3 view .LVU77
 260 0010 FFF7FEFF 		bl	MX_USART2_UART_Init
 261              	.LVL9:
  99:Src/main.c    **** 
 262              		.loc 1 99 3 view .LVU78
  99:Src/main.c    **** 
 263              		.loc 1 99 8 is_stmt 0 view .LVU79
 264 0014 094B     		ldr	r3, .L13
 114:Src/main.c    ****   HAL_Delay(1000);
 265              		.loc 1 114 3 view .LVU80
ARM GAS  /tmp/ccbvFJfS.s 			page 10


 266 0016 0A4C     		ldr	r4, .L13+4
  99:Src/main.c    **** 
 267              		.loc 1 99 8 view .LVU81
 268 0018 93E80700 		ldm	r3, {r0, r1, r2}
 269 001c 01AB     		add	r3, sp, #4
 270 001e 03C3     		stmia	r3!, {r0, r1}
 101:Src/main.c    ****   // LCDSendText(&interface, "Bonne annee !");
 271              		.loc 1 101 3 view .LVU82
 272 0020 01A9     		add	r1, sp, #4
 273 0022 0848     		ldr	r0, .L13+8
  99:Src/main.c    **** 
 274              		.loc 1 99 8 view .LVU83
 275 0024 1A80     		strh	r2, [r3]	@ movhi
 101:Src/main.c    ****   // LCDSendText(&interface, "Bonne annee !");
 276              		.loc 1 101 3 is_stmt 1 view .LVU84
 277 0026 FFF7FEFF 		bl	LCDInit
 278              	.LVL10:
 279              	.L11:
 108:Src/main.c    ****   {
 280              		.loc 1 108 3 discriminator 1 view .LVU85
 114:Src/main.c    ****   HAL_Delay(1000);
 281              		.loc 1 114 3 discriminator 1 view .LVU86
 282 002a 2046     		mov	r0, r4
 283 002c 2021     		movs	r1, #32
 284 002e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 285              	.LVL11:
 115:Src/main.c    ****   }
 286              		.loc 1 115 3 discriminator 1 view .LVU87
 287 0032 4FF47A70 		mov	r0, #1000
 288 0036 FFF7FEFF 		bl	HAL_Delay
 289              	.LVL12:
 290 003a F6E7     		b	.L11
 291              	.L14:
 292              		.align	2
 293              	.L13:
 294 003c 00000000 		.word	.LANCHOR0
 295 0040 00000240 		.word	1073872896
 296 0044 00000000 		.word	interface
 297              		.cfi_endproc
 298              	.LFE126:
 300              		.section	.text._Error_Handler,"ax",%progbits
 301              		.align	1
 302              		.p2align 2,,3
 303              		.global	_Error_Handler
 304              		.syntax unified
 305              		.thumb
 306              		.thumb_func
 307              		.fpu fpv4-sp-d16
 309              	_Error_Handler:
 310              	.LFB128:
 190:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 311              		.loc 1 190 1 view -0
 312              		.cfi_startproc
 313              		@ Volatile: function does not return.
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              		@ link register save eliminated.
ARM GAS  /tmp/ccbvFJfS.s 			page 11


 317              	.LVL13:
 318              	.L16:
 193:Src/main.c    ****   {
 319              		.loc 1 193 3 discriminator 1 view .LVU89
 320              		.loc 1 195 3 discriminator 1 view .LVU90
 321 0000 FEE7     		b	.L16
 322              		.cfi_endproc
 323              	.LFE128:
 325              		.comm	interface,92,4
 326 0002 00BF     		.section	.rodata
 327              		.align	2
 328              		.set	.LANCHOR0,. + 0
 329              	.LC0:
 330 0000 01       		.byte	1
 331 0001 00       		.byte	0
 332 0002 01       		.byte	1
 333 0003 01       		.byte	1
 334 0004 01       		.byte	1
 335 0005 01       		.byte	1
 336 0006 01       		.byte	1
 337 0007 00       		.byte	0
 338 0008 00       		.byte	0
 339 0009 00       		.byte	0
 340              		.text
 341              	.Letext0:
 342              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 343              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 344              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 345              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 346              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 347              		.file 7 "/usr/arm-none-eabi/include/sys/lock.h"
 348              		.file 8 "/usr/arm-none-eabi/include/sys/_types.h"
 349              		.file 9 "/usr/lib/gcc/arm-none-eabi/8.2.0/include/stddef.h"
 350              		.file 10 "/usr/arm-none-eabi/include/sys/reent.h"
 351              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 352              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 353              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 354              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 355              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 356              		.file 16 "Inc/usart.h"
 357              		.file 17 "Inc/lcd.h"
 358              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 359              		.file 19 "Inc/gpio.h"
 360              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 361              		.file 21 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  /tmp/ccbvFJfS.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccbvFJfS.s:18     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccbvFJfS.s:27     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccbvFJfS.s:219    .text.SystemClock_Config:00000000000000ac $d
     /tmp/ccbvFJfS.s:226    .text.startup.main:0000000000000000 $t
     /tmp/ccbvFJfS.s:234    .text.startup.main:0000000000000000 main
     /tmp/ccbvFJfS.s:294    .text.startup.main:000000000000003c $d
                            *COM*:000000000000005c interface
     /tmp/ccbvFJfS.s:301    .text._Error_Handler:0000000000000000 $t
     /tmp/ccbvFJfS.s:309    .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/ccbvFJfS.s:327    .rodata:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
MX_GPIO_Init
MX_USART2_UART_Init
LCDInit
HAL_GPIO_TogglePin
HAL_Delay
